{
  "papers": [
    {
      "paper_code": "ACL_23_P_571",
      "abstract": "Transformer encoders contextualize token representations by attending to all other tokens at each layer, leading to quadratic increase in compute effort with the input length. In practice, however, the input text of many NLP tasks can be seen as a sequence of related segments (e.g., the sequence of sentences within a passage, or the hypothesis and premise in NLI). While attending across these segments is highly beneficial for many tasks, we hypothesize that this interaction can be delayed until later encoding stages. To this end, we introduce Layer-Adjustable Interactions in Transformers (LAIT). Within LAIT, segmented inputs are first encoded independently, and then jointly. This partial two-tower architecture bridges the gap between a Dual Encoder’s ability to pre-compute representations for segments and a fully self-attentive Transformer’s capacity to model cross-segment attention. The LAIT framework effectively leverages existing pretrained Transformers and converts them into the hybrid of the two aforementioned architectures, allowing for easy and intuitive control over the performance-efficiency tradeoff. Experimenting on a wide range of NLP tasks, we find LAIT able to reduce 30-50% of the attention FLOPs on many tasks, while preserving high accuracy; in some practical settings, LAIT could reduce actual latency by orders of magnitude.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "Transformer encoders contextualize token representations by attending to all other tokens at each layer, leading to quadratic increase in compute effort with the input length. In practice, however, the input text of many NLP tasks can be seen as a sequence of related segments (e.g., the sequence of sentences within a passage, or the hypothesis and premise in NLI). While attending across these segments is highly beneficial for many tasks, we hypothesize that this interaction can be delayed until later encoding stages.",
          "Main Action": "hypothesize",
          "Arguments": {
            "Agent": [
              "we"
            ],
            "Object": {
              "Primary Object": [
                "this interaction can be delayed until later encoding stages"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "input text of many NLP tasks can be seen as a sequence of related segments"
            ],
            "Purpose": [
              "highly beneficial for many tasks"
            ],
            "Method": [
              "delaying interaction until later encoding stages"
            ],
            "Results": [
              "<NONE>"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "To this end, we introduce Layer-Adjustable Interactions in Transformers (LAIT). Within LAIT, segmented inputs are first encoded independently, and then jointly. This partial two-tower architecture bridges the gap between a Dual Encoder’s ability to pre-compute representations for segments and a fully self-attentive Transformer’s capacity to model cross-segment attention. The LAIT framework effectively leverages existing pretrained Transformers and converts them into the hybrid of the two aforementioned architectures, allowing for easy and intuitive control over the performance-efficiency tradeoff.",
          "Main Action": "introduce",
          "Arguments": {
            "Agent": [
              "we"
            ],
            "Object": {
              "Primary Object": [
                "Layer-Adjustable Interactions in Transformers (LAIT)"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "Within LAIT, segmented inputs are first encoded independently, and then jointly."
            ],
            "Purpose": [
              "to bridge the gap between a Dual Encoder’s ability to pre-compute representations for segments and a fully self-attentive Transformer’s capacity to model cross-segment attention"
            ],
            "Method": [
              "converts them into the hybrid of the two aforementioned architectures"
            ],
            "Results": [
              "allowing for easy and intuitive control over the performance-efficiency tradeoff"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Results/Findings": "",
          "Text": "Experimenting on a wide range of NLP tasks, we find LAIT able to reduce 30-50% of the attention FLOPs on many tasks, while preserving high accuracy; in some practical settings, LAIT could reduce actual latency by orders of magnitude.",
          "Main Action": "find",
          "Arguments": {
            "Agent": [
              "we"
            ],
            "Object": {
              "Primary Object": [
                "LAIT able to reduce 30-50% of the attention FLOPs on many tasks, while preserving high accuracy"
              ],
              "Secondary Object": [
                "actual latency by orders of magnitude"
              ]
            },
            "Context": [
              "Experimenting on a wide range of NLP tasks"
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "reduce 30-50% of the attention FLOPs on many tasks, while preserving high accuracy",
              "could reduce actual latency by orders of magnitude"
            ],
            "Analysis": [
              "in some practical settings"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        }
      ]
    },
    {
      "paper_code": "ACL_23_P_196",
      "abstract": "Entailment Graphs (EGs) have been constructed based on extracted corpora as a strong and explainable form to indicate context-independent entailment relation in natural languages. However, EGs built by previous methods often suffer from severe sparsity issues, due to limited corpora available and the long-tail phenomenon of predicate distributions. In this paper, we propose a multi-stage method, Typed Predicate-Entailment Graph Generator (TP-EGG), to tackle this problem. Given several seed predicates, TP-EGG builds the graphs by generating new predicates and detecting entailment relations among them. The generative nature of TP-EGG helps us leverage the recent advances from large pretrained language models (PLMs), while avoiding the reliance on carefully prepared corpora. Experiments on benchmark datasets show that TP-EGG can generate high-quality and scale-controllable entailment graphs, achieving significant in-domain improvement over state-of-the-art EGs and boosting the performance of downstream inference tasks.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "Entailment Graphs (EGs) have been constructed based on extracted corpora as a strong and explainable form to indicate context-independent entailment relation in natural languages. However, EGs built by previous methods often suffer from severe sparsity issues, due to limited corpora available and the long-tail phenomenon of predicate distributions.",
          "Main Action": "have been constructed",
          "Arguments": {
            "Agent": [
              "Entailment Graphs (EGs)"
            ],
            "Object": {
              "Primary Object": [
                "based on extracted corpora"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "as a strong and explainable form to indicate context-independent entailment relation in natural languages"
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "<NONE>"
            ],
            "Analysis": [
              "due to limited corpora available and the long-tail phenomenon of predicate distributions"
            ],
            "Challenge": [
              "severe sparsity issues"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "In this paper, we propose a multi-stage method, Typed Predicate-Entailment Graph Generator (TP-EGG), to tackle this problem. Given several seed predicates, TP-EGG builds the graphs by generating new predicates and detecting entailment relations among them. The generative nature of TP-EGG helps us leverage the recent advances from large pretrained language models (PLMs), while avoiding the reliance on carefully prepared corpora.",
          "Main Action": "propose",
          "Arguments": {
            "Agent": [
              "we"
            ],
            "Object": {
              "Primary Object": [
                "Typed Predicate-Entailment Graph Generator (TP-EGG)"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "Given several seed predicates, TP-EGG builds the graphs by generating new predicates and detecting entailment relations among them."
            ],
            "Purpose": [
              "tackle this problem"
            ],
            "Method": [
              "leverage the recent advances from large pretrained language models (PLMs)",
              "avoiding the reliance on carefully prepared corpora"
            ],
            "Results": [
              "<NONE>"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Results/Findings": "",
          "Text": "Experiments on benchmark datasets show that TP-EGG can generate high-quality and scale-controllable entailment graphs, achieving significant in-domain improvement over state-of-the-art EGs and boosting the performance of downstream inference tasks.",
          "Main Action": "show",
          "Arguments": {
            "Agent": [
              "Experiments"
            ],
            "Object": {
              "Primary Object": [
                "that TP-EGG can generate high-quality and scale-controllable entailment graphs"
              ],
              "Secondary Object": [
                "downstream inference tasks"
              ]
            },
            "Context": [
              "on benchmark datasets"
            ],
            "Purpose": [
              "achieving significant in-domain improvement over state-of-the-art EGs"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "high-quality and scale-controllable entailment graphs",
              "significant in-domain improvement over state-of-the-art EGs",
              "boosting the performance of downstream inference tasks"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        }
      ]
    }
  ]
}