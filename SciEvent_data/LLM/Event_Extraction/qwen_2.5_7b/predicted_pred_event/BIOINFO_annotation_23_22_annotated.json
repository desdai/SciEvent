{
  "papers": [
    {
      "paper_code": "bioinfo_23_P_241",
      "abstract": "Annotation of the mass signals is still the biggest bottleneck for the untargeted mass spectrometry analysis of complex mixtures. Molecular networks are being increasingly adopted by the mass spectrometry community as a tool to annotate large-scale experiments. We have previously shown that the process of propagating annotations from spectral library matches on molecular networks can be automated using Network Annotation Propagation (NAP). One of the limitations of NAP is that the information for the spectral matches is only propagated locally, to the first neighbor of a spectral match. Here, we show that annotation propagation can be expanded to nodes not directly connected to spectral matches using random walks on graphs, introducing the ChemWalker python library. Similarly to NAP, ChemWalker relies on combinatorial in silico fragmentation results, performed by MetFrag, searching biologically relevant databases. Departing from the combination of a spectral network and the structural similarity among candidate structures, we have used MetFusion Scoring function to create a weight function, producing a weighted graph. This graph was subsequently used by the random walk to calculate the probability of 'walking' through a set of candidates, departing from seed nodes (represented by spectral library matches). This approach allowed the information propagation to nodes not directly connected to the spectral library match. Compared with NAP, ChemWalker has a series of improvements, on running time, scalability and maintainability and is available as a standalone python package.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "Annotation of the mass signals is still the biggest bottleneck for the untargeted mass spectrometry analysis of complex mixtures. Molecular networks are being increasingly adopted by the mass spectrometry community as a tool to annotate large-scale experiments. We have previously shown that the process of propagating annotations from spectral library matches on molecular networks can be automated using Network Annotation Propagation (NAP). One of the limitations of NAP is that the information for the spectral matches is only propagated locally, to the first neighbor of a spectral match.",
          "Main Action": "<NONE>",
          "Arguments": {
            "Agent": [
              "We"
            ],
            "Object": {
              "Primary Object": [
                "molecular networks"
              ],
              "Secondary Object": [
                "spectral library matches"
              ]
            },
            "Context": [
              "Annotation of the mass signals is still the biggest bottleneck for the untargeted mass spectrometry analysis of complex mixtures.",
              "Molecular networks are being increasingly adopted by the mass spectrometry community as a tool to annotate large-scale experiments."
            ],
            "Purpose": [
              "to propagate annotations from spectral library matches on molecular networks"
            ],
            "Method": [
              "automated using Network Annotation Propagation (NAP)"
            ],
            "Results": [
              "One of the limitations of NAP is that the information for the spectral matches is only propagated locally, to the first neighbor of a spectral match."
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "information for the spectral matches is only propagated locally, to the first neighbor of a spectral match"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "Here, we show that annotation propagation can be expanded to nodes not directly connected to spectral matches using random walks on graphs, introducing the ChemWalker python library. Similarly to NAP, ChemWalker relies on combinatorial in silico fragmentation results, performed by MetFrag, searching biologically relevant databases. Departing from the combination of a spectral network and the structural similarity among candidate structures, we have used MetFusion Scoring function to create a weight function, producing a weighted graph. This graph was subsequently used by the random walk to calculate the probability of 'walking' through a set of candidates, departing from seed nodes (represented by spectral library matches).",
          "Main Action": "<NONE>",
          "Arguments": {
            "Agent": [
              "we"
            ],
            "Object": {
              "Primary Object": [
                "annotation propagation",
                "random walks on graphs",
                "ChemWalker python library"
              ],
              "Secondary Object": [
                "nodes not directly connected to spectral matches",
                "spectral library matches"
              ]
            },
            "Context": [
              "expanding annotation propagation beyond direct connections based on spectral matches",
              "using random walks on graphs",
              "relying on combinatorial in silico fragmentation results performed by MetFrag",
              "searching biologically relevant databases",
              "creating a weight function using MetFusion Scoring function",
              "producing a weighted graph"
            ],
            "Purpose": [
              "showing how annotation propagation can be extended"
            ],
            "Method": [
              "performing random walks on graphs",
              "introducing ChemWalker python library",
              "combining spectral networks and structural similarities among candidate structures",
              "using MetFrag's in silico fragmentation results",
              "applying MetFusion Scoring function to generate weights"
            ],
            "Results": [
              "calculating the probability of walking through a set of candidates"
            ],
            "Analysis": [
              "departing from the combination of a spectral network and the structural similarity among candidate structures"
            ],
            "Challenge": [
              "none mentioned"
            ],
            "Ethical": [
              "none mentioned"
            ],
            "Implications": [
              "none mentioned"
            ],
            "Contradictions": [
              "none mentioned"
            ]
          }
        },
        {
          "Results/Findings": "",
          "Text": "This approach allowed the information propagation to nodes not directly connected to the spectral library match. Compared with NAP, ChemWalker has a series of improvements, on running time, scalability and maintainability and is available as a standalone python package.",
          "Main Action": "<NONE>",
          "Arguments": {
            "Agent": [
              "ChemWalker"
            ],
            "Object": {
              "Primary Object": [
                "a series of improvements"
              ],
              "Secondary Object": [
                "running time",
                "scalability",
                "maintainability"
              ]
            },
            "Context": [
              "this approach"
            ],
            "Purpose": [
              "to allow information propagation to nodes not directly connected to the spectral library match"
            ],
            "Method": [
              "standalone python package"
            ],
            "Results": [
              "has a series of improvements, on running time, scalability and maintainability"
            ],
            "Analysis": [
              "is available as a standalone python package"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "improvements on running time, scalability and maintainability"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        }
      ]
    },
    {
      "paper_code": "bioinfo_23_P_452",
      "abstract": "With recent advances in sequencing technologies, it is now possible to obtain near-perfect complete bacterial chromosome assemblies cheaply and efficiently by combining a long-read-first assembly approach with short-read polishing. However, existing methods for assembling bacterial plasmids from long-read-first assemblies often misassemble or even miss bacterial plasmids entirely and accordingly require manual curation. Plassembler was developed to provide a tool that automatically assembles and outputs bacterial plasmids using a hybrid assembly approach. It achieves increased accuracy and computational efficiency compared to the existing gold standard tool Unicycler by removing chromosomal reads from the input read sets using a mapping approach.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "With recent advances in sequencing technologies, it is now possible to obtain near-perfect complete bacterial chromosome assemblies cheaply and efficiently by combining a long-read-first assembly approach with short-read polishing. However, existing methods for assembling bacterial plasmids from long-read-first assemblies often misassemble or even miss bacterial plasmids entirely and accordingly require manual curation.",
          "Main Action": "<NONE>",
          "Arguments": {
            "Agent": [
              "existing methods"
            ],
            "Object": {
              "Primary Object": [
                "bacterial plasmids"
              ],
              "Secondary Object": [
                "long-read-first assemblies"
              ]
            },
            "Context": [
              "recent advances in sequencing technologies",
              "obtain near-perfect complete bacterial chromosome assemblies cheaply and efficiently"
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "manual curation"
            ],
            "Results": [
              "misassemble or even miss bacterial plasmids entirely"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "require manual curation"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "Plassembler was developed to provide a tool that automatically assembles and outputs bacterial plasmids using a hybrid assembly approach. It achieves increased accuracy and computational efficiency compared to the existing gold standard tool Unicycler by removing chromosomal reads from the input read sets using a mapping approach.",
          "Main Action": "was developed",
          "Arguments": {
            "Agent": [
              "Plassembler"
            ],
            "Object": {
              "Primary Object": [
                "a tool"
              ],
              "Secondary Object": [
                "that automatically assembles and outputs bacterial plasmids"
              ]
            },
            "Context": [
              "using a hybrid assembly approach"
            ],
            "Purpose": [
              "to provide a tool that automatically assembles and outputs bacterial plasmids"
            ],
            "Method": [
              "removing chromosomal reads from the input read sets using a mapping approach"
            ],
            "Results": [
              "increased accuracy and computational efficiency compared to the existing gold standard tool Unicycler"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        }
      ]
    }
  ]
}