{
  "papers": [
    {
      "paper_code": "ACL_23_P_540",
      "abstract": "Reusing off-the-shelf code snippets from online repositories is a common practice, which significantly enhances the productivity of software developers. To find desired code snippets, developers resort to code search engines through natural language queries. Neural code search models are hence behind many such engines. These models are based on deep learning and gain substantial attention due to their impressive performance. However, the security aspect of these models is rarely studied. Particularly, an adversary can inject a backdoor in neural code search models, which return buggy or even vulnerable code with security/privacy issues. This may impact the downstream software (e.g., stock trading systems and autonomous driving) and cause financial loss and/or life-threatening incidents. In this paper, we demonstrate such attacks are feasible and can be quite stealthy. By simply modifying one variable/function name, the attacker can make buggy/vulnerable code rank in the top 11%. Our attack BADCODE features a special trigger generation and injection procedure, making the attack more effective and stealthy. The evaluation is conducted on two neural code search models and the results show our attack outperforms baselines by 60%. Our user study demonstrates that our attack is more stealthy than the baseline by two times based on the F1 score.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "Reusing off-the-shelf code snippets from online repositories is a common practice, which significantly enhances the productivity of software developers. To find desired code snippets, developers resort to code search engines through natural language queries. Neural code search models are hence behind many such engines. These models are based on deep learning and gain substantial attention due to their impressive performance. However, the security aspect of these models is rarely studied. Particularly, an adversary can inject a backdoor in neural code search models, which return buggy or even vulnerable code with security/privacy issues. This may impact the downstream software (e.g., stock trading systems and autonomous driving) and cause financial loss and/or life-threatening incidents.",
          "Main Action": "inject a backdoor",
          "Arguments": {
            "Agent": [
              "an adversary"
            ],
            "Object": {
              "Primary Object": [
                "code with security/privacy issues"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "However, the security aspect of these models is rarely studied.",
              "An adversary can inject a backdoor in neural code search models, which return buggy or even vulnerable code with security/privacy issues."
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "<NONE>"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "In this paper, we demonstrate such attacks are feasible and can be quite stealthy. By simply modifying one variable/function name, the attacker can make buggy/vulnerable code rank in the top 11%. Our attack BADCODE features a special trigger generation and injection procedure, making the attack more effective and stealthy.",
          "Main Action": "features",
          "Arguments": {
            "Agent": [
              "our attack BADCODE"
            ],
            "Object": {
              "Primary Object": [
                "a special trigger generation and injection procedure"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "By simply modifying one variable/function name, the attacker can make buggy/vulnerable code rank in the top 11%."
            ],
            "Purpose": [
              "To demonstrate the feasibility and stealthiness of such attacks."
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "Such attacks are feasible and can be quite stealthy."
            ],
            "Analysis": [
              "Our attack BADCODE makes the attack more effective and stealthy."
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "Recognizing the importance of such findings helps in developing better defense mechanisms against adversarial tactics."
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Results/Findings": "",
          "Text": "The evaluation is conducted on two neural code search models and the results show our attack outperforms baselines by 60%. Our user study demonstrates that our attack is more stealthy than the baseline by two times based on the F1 score.",
          "Main Action": "conducted on two neural code search models",
          "Arguments": {
            "Agent": [
              "researchers evaluated"
            ],
            "Object": {
              "Primary Object": [
                "evaluation"
              ],
              "Secondary Object": [
                "against baselines by 60%"
              ]
            },
            "Context": [
              "<NONE>"
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "The evaluation is conducted on two neural code search models and the results show our attack outperforms baselines by 60%",
              "Our user study demonstrates that our attack is more stealthy than the baseline by two times based on the F1 score."
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        }
      ]
    },
    {
      "paper_code": "ACL_23_P_835",
      "abstract": "To prevent the costly and inefficient use of resources on low-quality annotations, we want a method for creating a pool of dependable annotators who can effectively complete difficult tasks, such as evaluating automatic summarization. Thus, we investigate the recruitment of high-quality Amazon Mechanical Turk workers via a two-step pipeline. We show that we can successfully filter out subpar workers before they carry out the evaluations and obtain high-agreement annotations with similar constraints on resources. Although our workers demonstrate a strong consensus among themselves and CloudResearch workers, their alignment with expert judgments on a subset of the data is not as expected and needs further training in correctness. This paper still serves as a best practice for the recruitment of qualified annotators in other challenging annotation tasks.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "To prevent the costly and inefficient use of resources on low-quality annotations, we want a method for creating a pool of dependable annotators who can effectively complete difficult tasks, such as evaluating automatic summarization.",
          "Main Action": "create a pool of dependable annotators",
          "Arguments": {
            "Agent": [
              "to enable effective completion of difficult tasks"
            ],
            "Object": {
              "Primary Object": [
                "dependable annotators who can effectively complete difficult tasks"
              ],
              "Secondary Object": [
                "such as evaluating automatic summarization"
              ]
            },
            "Context": [
              "To prevent the costly and inefficient use of resources on low-quality annotations"
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "<NONE>"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "Thus, we investigate the recruitment of high-quality Amazon Mechanical Turk workers via a two-step pipeline. We show that we can successfully filter out subpar workers before they carry out the evaluations and obtain high-agreement annotations with similar constraints on resources.",
          "Main Action": "show",
          "Arguments": {
            "Agent": [
              "we investigate"
            ],
            "Object": {
              "Primary Object": [
                "a two-step pipeline"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "thus, we investigate the recruitment of high-quality amazon mechanical turk workers via a two-step pipeline"
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "we show that we can successfully filter out subpar workers before they carry out the evaluations and obtain high-agreement annotations with similar constraints on resources"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Results/Findings": "",
          "Text": "Although our workers demonstrate a strong consensus among themselves and CloudResearch workers, their alignment with expert judgments on a subset of the data is not as expected and needs further training in correctness.",
          "Main Action": "align",
          "Arguments": {
            "Agent": [
              "our workers"
            ],
            "Object": {
              "Primary Object": [
                "themselves and CloudResearch workers"
              ],
              "Secondary Object": [
                "<NONE>"
              ]
            },
            "Context": [
              "Although our workers demonstrate a strong consensus among themselves and CloudResearch workers"
            ],
            "Purpose": [
              "highlighting a discrepancy between internal consensus and expert judgments"
            ],
            "Method": [
              "<NONE>"
            ],
            "Results": [
              "their alignment with expert judgments on a subset of the data is not as expected"
            ],
            "Analysis": [
              "needs further training in correctness"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Conclusions/Implications": "ERROR",
          "Text": "This paper still serves as a best practice for the recruitment of qualified annotators in other challenging annotation tasks.",
          "Main Action": "ERROR",
          "Arguments": {
            "Agent": [
              "ERROR"
            ],
            "Object": {
              "Primary Object": [
                "ERROR"
              ],
              "Secondary Object": [
                "ERROR"
              ]
            },
            "Context": [
              "ERROR"
            ],
            "Purpose": [
              "ERROR"
            ],
            "Method": [
              "ERROR"
            ],
            "Results": [
              "ERROR"
            ],
            "Analysis": [
              "ERROR"
            ],
            "Challenge": [
              "ERROR"
            ],
            "Ethical": [
              "ERROR"
            ],
            "Implications": [
              "ERROR"
            ],
            "Contradictions": [
              "ERROR"
            ]
          },
          "Error_Type": "NO_JSON_FOUND"
        }
      ]
    }
  ]
}