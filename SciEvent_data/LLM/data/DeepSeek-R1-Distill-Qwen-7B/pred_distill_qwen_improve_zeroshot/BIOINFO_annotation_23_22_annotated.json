{
  "papers": [
    {
      "paper_code": "bioinfo_23_P_241",
      "abstract": "Annotation of the mass signals is still the biggest bottleneck for the untargeted mass spectrometry analysis of complex mixtures. Molecular networks are being increasingly adopted by the mass spectrometry community as a tool to annotate large-scale experiments. We have previously shown that the process of propagating annotations from spectral library matches on molecular networks can be automated using Network Annotation Propagation (NAP). One of the limitations of NAP is that the information for the spectral matches is only propagated locally, to the first neighbor of a spectral match. Here, we show that annotation propagation can be expanded to nodes not directly connected to spectral matches using random walks on graphs, introducing the ChemWalker python library. Similarly to NAP, ChemWalker relies on combinatorial in silico fragmentation results, performed by MetFrag, searching biologically relevant databases. Departing from the combination of a spectral network and the structural similarity among candidate structures, we have used MetFusion Scoring function to create a weight function, producing a weighted graph. This graph was subsequently used by the random walk to calculate the probability of 'walking' through a set of candidates, departing from seed nodes (represented by spectral library matches). This approach allowed the information propagation to nodes not directly connected to the spectral library match. Compared with NAP, ChemWalker has a series of improvements, on running time, scalability and maintainability and is available as a standalone python package.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "Annotation of the mass signals is still the biggest bottleneck for the untargeted mass spectrometry analysis of complex mixtures. Molecular networks are being increasingly adopted by the mass spectrometry community as a tool to annotate large-scale experiments. We have previously shown that the process of propagating annotations from spectral library matches on molecular networks can be automated using Network Annotation Propagation (NAP). One of the limitations of NAP is that the information for the spectral matches is only propagated locally, to the first neighbor of a spectral match.",
          "Main Action": "<NONE>",
          "Arguments": {
            "Agent": [
              "We have previously shown"
            ],
            "Object": {
              "Primary Object": [
                "that the process of propagating annotations from spectral library matches on molecular networks can be automated using Network Annotation Propagation (NAP)"
              ],
              "Primary Modifier": [
                "<NONE>"
              ],
              "Secondary Object": [
                "<NONE>"
              ],
              "Secondary Modifier": [
                "<NONE>"
              ]
            },
            "Context": [
              "One of the limitations of NAP is that the information for the spectral matches is only propagated locally, to the first neighbor of a spectral match."
            ],
            "Purpose": [
              "<NONE>"
            ],
            "Method": [
              "Network Annotation Propagation (NAP) was introduced as a method to propagate annotations..."
            ],
            "Results": [
              "<NONE>"
            ],
            "Analysis": [
              "<NONE>"
            ],
            "Challenge": [
              "<NONE>"
            ],
            "Ethical": [
              "<NONE>"
            ],
            "Implications": [
              "<NONE>"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "Here, we show that annotation propagation can be expanded to nodes not directly connected to spectral matches using random walks on graphs, introducing the ChemWalker python library. Similarly to NAP, ChemWalker relies on combinatorial in silico fragmentation results, performed by MetFrag, searching biologically relevant databases. Departing from the combination of a spectral network and the structural similarity among candidate structures, we have used MetFusion Scoring function to create a weight function, producing a weighted graph. This graph was subsequently used by the random walk to calculate the probability of 'walking' through a set of candidates, departing from seed nodes (represented by spectral library matches).",
          "Main Action": "Showed",
          "Arguments": {
            "Agent": [
              "MetFrag",
              "NAP"
            ],
            "Object": {
              "Primary Object": [
                "Spectral Network",
                "Structural Similarity Among Candidate Structures"
              ],
              "Primary Modifier": [
                "<NONE>"
              ],
              "Secondary Object": [
                "Weighted Graph",
                "Random Walks",
                "Probability Calculation"
              ],
              "Secondary Modifier": [
                "<NONE>"
              ]
            },
            "Context": [
              "Combinatorial in silico fragmentation results performed by MetFrag",
              "Searching biologically relevant databases"
            ],
            "Purpose": [
              "To introduce ChemWalker Python library for expanding annotation propagation"
            ],
            "Method": [
              "Using MetFusion Scoring Function to create a weight function",
              "Building a weighted graph",
              "Performing random walks to compute walking probabilities"
            ],
            "Results": [
              "Successful expansion of annotation propagation capability"
            ],
            "Analysis": [
              "Improved ability to perform molecular analysis across diverse chemical spaces"
            ],
            "Challenge": [
              "No challenges reported"
            ],
            "Ethical": [
              "No ethical concerns discussed"
            ],
            "Implications": [
              "Potential for significant advances in areas requiring efficient molecular analysis"
            ],
            "Contradictions": [
              "None reported"
            ]
          }
        },
        {
          "Results/Findings": "",
          "Text": "This approach allowed the information propagation to nodes not directly connected to the spectral library match. Compared with NAP, ChemWalker has a series of improvements, on running time, scalability and maintainability and is available as a standalone python package.",
          "Main Action": "allowed",
          "Arguments": {
            "Agent": [
              "this approach"
            ],
            "Object": {
              "Primary Object": [
                "<NONE>"
              ],
              "Primary Modifier": [
                "<NONE>"
              ],
              "Secondary Object": [
                "nodes not directly connected"
              ],
              "Secondary Modifier": [
                "<NONE>"
              ]
            },
            "Context": [
              "Compared with NAP"
            ],
            "Purpose": [
              "To enable information propagation across non-directly connected nodes."
            ],
            "Method": [
              "Not explicitly detailed in the text."
            ],
            "Results": [
              "ChemWalker shows improvements in running time, scalability, and maintainability compared to NAP."
            ],
            "Analysis": [
              "These improvements make ChemWalker suitable for scenarios requiring efficient handling of larger datasets."
            ],
            "Challenge": [
              "Maintaining performance while scaling remains a concern."
            ],
            "Ethical": [
              "No mention of ethical considerations."
            ],
            "Implications": [
              "Significant advancements in chemical walker technology offer promising applications in various domains."
            ],
            "Contradictions": [
              "No contradictions noted within the text."
            ]
          }
        }
      ]
    },
    {
      "paper_code": "bioinfo_23_P_452",
      "abstract": "With recent advances in sequencing technologies, it is now possible to obtain near-perfect complete bacterial chromosome assemblies cheaply and efficiently by combining a long-read-first assembly approach with short-read polishing. However, existing methods for assembling bacterial plasmids from long-read-first assemblies often misassemble or even miss bacterial plasmids entirely and accordingly require manual curation. Plassembler was developed to provide a tool that automatically assembles and outputs bacterial plasmids using a hybrid assembly approach. It achieves increased accuracy and computational efficiency compared to the existing gold standard tool Unicycler by removing chromosomal reads from the input read sets using a mapping approach.",
      "events": [
        {
          "Background/Introduction": "",
          "Text": "With recent advances in sequencing technologies, it is now possible to obtain near-perfect complete bacterial chromosome assemblies cheaply and efficiently by combining a long-read-first assembly approach with short-read polishing. However, existing methods for assembling bacterial plasmids from long-read-first assemblies often misassemble or even miss bacterial plasmids entirely and accordingly require manual curation.",
          "Main Action": "existing methods",
          "Arguments": {
            "Agent": [
              "for assembling bacterial plasmids from long-read-first assemblies often misassembled or even missed bacterial plasmids entirely"
            ],
            "Object": {
              "Primary Object": [
                "bacterial plasmids"
              ],
              "Primary Modifier": [
                "<NONE>"
              ],
              "Secondary Object": [
                "long-read-first assemblies"
              ],
              "Secondary Modifier": [
                "<NONE>"
              ]
            },
            "Context": [
              "However, existing methods for assembling bacterial plasmids from long-read-first assemblies often misassemble or even miss bacterial plasmids entirely"
            ],
            "Purpose": [
              "Accordingly require manual curation."
            ],
            "Method": [
              "existing methods for assembling bacterial plasmids from long-read-first assemblies"
            ],
            "Results": [
              "existential methods for assembling bacterial plasmids from long-read-first assemblies often result in misassemblies or omissions."
            ],
            "Analysis": [
              "These shortcomings necessitate subsequent manual intervention to correct the inaccuracies."
            ],
            "Challenge": [
              "This limitation hinders automation efforts aimed at improving genome assembly workflows."
            ],
            "Ethical": [
              "No direct ethical concern mentioned."
            ],
            "Implications": [
              "Identifies gaps in automated genome assembly processes relying on hybrid long-read/short-read strategies."
            ],
            "Contradictions": [
              "None identified."
            ]
          }
        },
        {
          "Methods/Approach": "",
          "Text": "Plassembler was developed to provide a tool that automatically assembles and outputs bacterial plasmids using a hybrid assembly approach. It achieves increased accuracy and computational efficiency compared to the existing gold standard tool Unicycler by removing chromosomal reads from the input read sets using a mapping approach.",
          "Main Action": "automatically assembles",
          "Arguments": {
            "Agent": [
              "<NONE>"
            ],
            "Object": {
              "Primary Object": [
                "bacterial plasmids"
              ],
              "Primary Modifier": [
                "<NONE>"
              ],
              "Secondary Object": [
                "hybrid assembly approach"
              ],
              "Secondary Modifier": [
                "<NONE>"
              ]
            },
            "Context": [
              "Plassembler was developed to provide a tool"
            ],
            "Purpose": [
              "improve upon Unicycler's limitations regarding chromosomal reads"
            ],
            "Method": [
              "a hybrid assembly strategy along with a novel mapping technique for excluding unwanted data sources"
            ],
            "Results": [
              "increased accuracy",
              "computational efficiency"
            ],
            "Analysis": [
              "chose a hybrid assembly approach",
              "novel mapping technique for excluding unwanted data sources"
            ],
            "Challenge": [
              "accurately distinguishing between desired plasmid sequences and extraneous ones within large datasets"
            ],
            "Ethical": [
              "ensuring accurate identification reduces false positives/negatives in genetic studies involving bacteria"
            ],
            "Implications": [
              "advancing similar genome manipulation tools applicable across various organisms"
            ],
            "Contradictions": [
              "<NONE>"
            ]
          }
        }
      ]
    }
  ]
}